"use strict";

/* GENERAL EXPLANATION:

-> SORTING ARRAYS:
-> SORT METHOD IS USED TO SORT THE ORIGINAL ARRAY.
-> IT DOESN'T MAKE A COPY OF ARRAY INSTEAD IT MUTATE THE ORIGINAL ARRAY.

-> SORT METHOD SORT THE ARRAYS BASED ON STRINGS.
-> IT MEANS THAT IT WILL START FROM A AND END TO Z.
-> IT FIRST CONVERT EVERYTHING TO STRINGS AND THEN SORT THE ENTIRE ARRAY.

-> WE HAVE A SOLUTION FOR IT.
-> WE CAN APPLY CONDITION(COMPARE FUNCTION) TO IT , BECAUSE IT IS ALS HIGHER ORDER METHOD.
-> FOR ASCENDING ORDER ,  THE FIRST ELEMENT SHOULD BE GREATER THAN THE SECOND , THEN IT WILL RETURN -1 AND VICE VERSA.

-> WE CAN PASS 2 ARGUMENTS , THESE ARGUMENTS WILL REPRESENT THE FIRST VALUE AND THE NEXT VALUE IN THE ARRAY.

-> IF COMPARE FUNCTION IS NOT APPLIED.
-> ALL NON-UNDEFINED WILL FIRST CONVERT TO STRINGS AND THEN SORT ACCORDING TO THE UNITS ORDER.

-> IN NUMERIC , 9 COMES BEFORE 80 , BUT IN STRINGS THE '80' COMES BEFORE '9' IN THE UNICODE ORDER.

-> ALL UNDEFINED ELEMENTS ARE SORTED TO THE END OF THE ARRAY.

-> THAT'S ALL ABOUT SORTING OF ARRAYS , WE WILL SEE NEXT.

*/

const coins = [200, 450, -400, 3000, -650, -130, 70, 1300];
// IT FIRST SORT THE NEGATIVE NUMBERS , STARTING FROM 1 TO NEXT NUMBER AND THEN POSITIVE SAME AS NEGATIVE.
// BEACUSE IT IS ALL STRING FOR SORT.
console.log(coins.sort());
