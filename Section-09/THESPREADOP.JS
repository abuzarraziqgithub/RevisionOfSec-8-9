"use strict";
// THE SPREAD OPERATOR:

/* GENERAL EXPLANATION:

-> WE USE SPREAD OPERATOR TO EXPAND AN ARRAY INTO ALL ITS ELEMENTS.
-> WE BASICALLY GET ALL THE ELEMENTS OUT OF THE ARRAY.
-> IF THERE WAS NO SPREAD OPERATOR , WE WOULD GET EACH OF THE ELEMENT OUT MANUALY.

-> WE CAN ALSO USE IT FOR ADDING NEW ELEMENT TO ARRAY.
-> BY USING SPREAD OPR TO ADD NEW ELEMENT TO ARRAY , IT IS CREATING THE NEW ARRAY AND NOT THE MANIPULATING THE ORIGINAL ARRAY.


-> WE CAN COPY THE ENTIRE ARRAY USING SPREAD OPERATOR.

-> WE CAN ALSO JOIN OR MERGE TWO OR MORE ARRAYS WITH IN ONE.

-> SPREAD OPERATOR WORKS ON ITERABLES LIKE ARRAYS, STRINGS MAPS,SETS ETC.
-> IT ALSO WORKS ON OBJECTS AS WELL SINCE ES 2018.

-> WE CAN'T USE THE SPREAD OPERATOR IN THE TEMPLATE LITERALS.
-> MULTIPLE VALUES SEPARATED BY A COMMA ARE USUALLY ONLY EXPECTED WHEN WE PASS ARGUMENTS INTO A FUNCTION OR WHEN WE BUILT A NEW ARRAY.

-> WE CAN USE THE SPREAD OPERATOR AS AN ARGUMENT IN A FUNCTION.

-> THE DIFFERENCE BETWEEN THE SPREAD  OPERATOR AND DESTRUCTURING IS WE STORE VALUES IN VARIABLES IN DESTRUCTURING WHILE WE GET THE ELEMENTS OUT OF THE ITERABLES IN THE SPREAD OPERATOR.
-> WE DON'T NEED TO CREATE NEW VARIABLES.

-> WE SAID THAT WHEN WE REAASING VALUE TO OBJECT PROPERTY IN A OBJEC WHICH WE ASSIGN THAT OBJECT , IT WILL CHANGE THE VALUE IN THE ORIGINAL AS WELL.

-> BUT FOR SPREAD OPERATOR , IT IS NOT THE CASE.
*/

// SPREAD OPERATOR FOR ARRAY:
const arr = [
  1, 2, 3, 4, 4, 5, 6, 7, 7, 8, 3, 2, 3, 43, 4, 3, 4, 3, 2, 4, 5, 3, 4,
];

console.log(arr);
// UNPACKING ARRAY ELEMENTS
console.log(...arr);
// ADDING NEW ELEMENT
const addArr = [...arr, "new Item"];
console.log(addArr);

// COPYING ARRAY
const copiedArr = [...addArr];
console.log(copiedArr);

// MERGING ARRAY
const mergeArr = [...arr, ...addArr, ...copiedArr];
console.log(mergeArr);

// SPREAD OPERATOR FOR STRING:
const str = "jhon";
// MAKING ARRAY OF STRING USING SPREAD OPERATOR
const letters = [...str, "", "s."];
console.log(str);
console.log(letters);

// SPREAD OPERATOR FOR OBJECTS:
const obj = {
  number1: 1,
  number2: 2,
  number3: 3,
  number4: 4,
};
const objCopy = { ...obj };
console.log(obj);
console.log(objCopy);
objCopy.number1 = "one";
console.log(objCopy);
console.log(obj);

/* SUMMARY:

-> SPREAD OPERATOR UNPACK OR GET ALL THE VALUES OF THE ARRAY OUT .
-> IT EXPAND THE ARRAY.
-> THE SPREAD OPERATOR CAN ADD , JOIN(MERGE) OR COPY THE ENTIRE ARRAY.
-> SPREAD OPERATOR WORKS ON ITERABLES AND ALSO OBJECTS (SINCE ES-2018).
-> WE CAN'T USE THE SPREAD OPERATOR IN THE TEMPLATE LITERALS.
*/
