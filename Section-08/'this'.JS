"use strict";

/* GENERAL EXPLANATION:

-> THE "this" KEYWORD IS A SPECIAL  VARIABLE THAT IS CREATED FOR EVERY EXECUTION CONTEXT OR EVERY FUNCTION EC.

-> IT TAKES THE VALUE OF THE "OWNER / OBJECT" AND DEFINE IT IN THE FUNCTION IN WHICH THE "this" KEYWORD IS USED.

-> "this" IS NOT STATIC , IT DEPENDS ON HOW THE FUNCTION OR METHOD IS CALLED AND IT'S VALUE IS ONLY ASSIGNED WHEN THE FUNCTION IS CALLED.
*/

/*

#

*/

/* USE CASES OF "this" KEYWORD:

-> "this" USED IN METHOD IS ACTUALLY THE "this" OF OBJECT THAT IS CALLING THE METHOD.


-> "this" USED IN SIMPLE FUNCTIONS WILL BE UNDEFINED IN STRICT MODE , OTHERWISE IT WILL BE THE "this" OF WINDOW GLOBAL OBJECT.


-> "this" FOR ARROW FUNCTIONS WILL BE THE "this" OF THIER SORROUNDING FUNCTION .
-> "this" IN ARROW FUNCTION IS CALLED "LEXICAL this" .
-> LEXICAL this DOESN'T GET THIER OWN "this" KEYWORD , INSTEAD IT USES THE "this" OF ANOTHER PARENT SCOPE .
-> "this" IN ARROW FUNCTION IS CALLED THE "LEXICAL this KEYWORD" BECAUSE IT SIMPLY GETS PICKED UP FROM THE OUTER LEXICAL SCOPE OF THE ARROW FUNCTION.


-> "this" IN THE EVENTLISTENER IS THE "this" OF DOM ELEMENT THAT THE HANDLER IS ATTACHED TO.



-> "this" DOESN'T POINT TO THE FUNCTION ITSELF , AND ALSO NOT IN THE VARIABLE ENVIROMENT.
*/

/*

#

*/

/*  SUMMARY:

-> "this" IS A SPECIAL KEYOWRD(VARIABLE) WHICH IS CRETED FOR EVERY EXECUTION CONTEXT.

-> IT TAKES THE VALUE OF THE OBJECT IN METHOD WHERE IT IS DEFINED.

-> IT IS NOT STATIC , AND DEPENDS HOW IT IS CALLED.

-> 'this' USED IN THE METHOD IS ACTAULLY THE 'this' OF THAT OBJECT TAHT IS CALLING THE METHOD.

-> 'this' FOR SIMPLE FUNCTION IS UNDEFINED IN THE STRICT MODE OTHERWISE IT WILL BE THE GLOBAL WINDOW OBJECT.

->  "this" USED IN ARROW IS ACTUALLY THE "this" OF THE SORROUNDINGS AND THE WINDOW OBJECT AND IS CALLED LEXICAL this.

-> IT DOESN'T POINT TO THE FUNCTION ITSELF , AND ALSO NOT IN THE VARIABLE ENVIROMENTS.

*/
