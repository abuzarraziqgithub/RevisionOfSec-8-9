"use strict";

/*  GENERAL EXPLANATION:

-> EXECUTION CONTEXT/ ENVIROMENT :  IT IS THE ENVIROMENT WHERE THE EXECUTION OF THE CODE TAKES PLACE. THE EXECUTION TAKES PLACE IN THE CALL STACK.

-> THERE ARE SOME STEPS INVOLVED , IN WHICH THE EXECUTION OF THE CODE TAKES PLACE IN A CORRECT WAY.

-> AT FIRST , THE CREATION OF TOP-LEVEL CODE (CODE WHICH IS OUTSIDE OF BLOCK SCOPE) TAKES PLACE IN THE CALL STACK.

-> THE TOP-LEVEL CODE IS THEN EXECUTE.

-> ALSO THE CREATION AND EXECUTION OF FUNCTIONS TAKES PLACE AS WELL.

-> CALL-BACK FUNCTIONS COME THROUGH EVENT-LOOP AND THEN EXECUTED IN THE CALL STACK.
*/

/*

#

*/

/*  WHAT'S INSIDE OF EXECUTION CONTEXT:

-> EVERY EXECUTION CONTEXT HAS THIER OWN VARIABLE ENVIROMENT , SCOPE-CHAIN AND THE 'this' KEYWORD.

-> VARIABLE ENVIROMENT CONTAINS KEYWORDS LIKE LET,CONST,VAR DECLARATIONS , FUNCTIONS AND ARGUMENTS OBJECTS.
-> ARGUMENT OBJECT IS ACTUALLY THE ARGUMENTS OF A FUNCTION IN EXECUTION CONTEXT.

-> EXECUTION CONTEXT ALSO HAS A SCOPE CHAIN.
-> SCOPE-CHAIN IS BASICALLY A REFERENCE TO VARIABLE , WHICH IS LOCATED OUTSIDE OF A FUNCTION.


-> EXECUTION CONTEXT ALSO CONTAIN THE "this" KEYWORD WHICH IS GENERATED DURING WHEN THE CONTEXT IS IN CREATION IN THE CALL STACK.


*/

/* SOME IMPORTANT POINTS:

-> THE ARROW FUNCTION EXECUTION CONTEXT DOESN'T HAVE THE ARGUMENT OBJECT AND THE "this" KEYWORD.

*/

/* SUMMARY:

-> EXECUTION CONTEXT IS AN ENVIROMENT WHERE THE EXECUTION OF CODE TAKES PLACE.

-> THIS EXECUTION IS  INSIDE THE CALL STACK.

-> EVERY EXECUTION CONTEXT CONTAIN VARIABLE ENVIROMENT, ARGUMENT OBJECT AND THE "this" KEYWORD.

-> VARIABLE ENVIROMENT CONTAIN LET, CONST , VAR FUNCTION DECLARATIONS AND ALSO ARGUMENT OBJECTS WHICH IS ACTUALLY THE PART OF THAT FUNCTION.

-> ALSO HAS THE "this" KEYWORD EXCEPT FOR ARROW FUNCTIONS WHICH ALSO HASN'T THE ARGUMENT OBJECTS.

*/
