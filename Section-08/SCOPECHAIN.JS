"use strict";

/* GENERAL EXPLANATION:

-> START WITH SCOPING , LEXICAL SCOPING , SCOPE AND SCOPE OF A VARIABLE.

-> SCOPING IS THE TERM USED FOR HOW THE VARIABLES ARE ORGANIZED AND ACCESSED IN A CODE .

-> LEXIACAL SCOPING IS KIND A RULE THAT THE GLOBAL SCOPE VARIABLE CAN BE ACCESS INSIDE THE FUNCTION , ALSO INNER FUNCTION CAN ACCESS THIER PARENT FUNCTION VARIABLES. BUT THE VRAIBLE CAN'T BE ACCESS OUTSIDE THE INNER SCOPE.

-> SCOPE IS WHERE THE VARIABLE IS DECLARED.

-> SCOPE OF A VARIABLE IS THE REGION OR PIECE WHERE A VARIABLE CAN BE ACCESSED.

*/

/* TYPES OF SCOPE OF VARIABLE:

-> THERE ARE THREE(3) TYPES OF SCOPE:
-> GLOBAL SCOPE , FUNCTION SCOPE AND THE BLOCK SCOPE(ES6).

-> GLOBAL SCOPE VAIABLES ARE DECLARED OUTSIDE OF ANY FUNCTION OR BLOCK AND CAN BE ACCESSED ANYWHERE IN THE CODE.


-> FUNCTION SCOPE VARIABLES ARE DECLARED INSIDE OF A FUNCTION AND CANNOT BE ACCESSED OUTSIDE OF THAT FUNCTION BLOCK.
-> ALSO CALLED LOCAL SCOPE.


-> BLOCK SCOPE VARIABLES ARE DECLARED INSIDE THE BLOCK SCOPE AND CANNOT BE ACCESSED OUTSIDE OF THAT BLOCK EXECPT THE VARIABLE DECALRED WITH VAR.
-> BLOCK SCOPE VARIABLES ARE LET AND CONST.
-> VARIABLE DECALRED WITH VAR CAN BE ACCESSED OUTSIDE OF THAT BLOCK.
-> IT IS INTRODUCED IN ES6.
*/

/*

#

*/

/* THE SCOPE CHAIN:
-> CODE:

   const myName = 'Abuzar';

   function first()
    {
        const age =30;

        if(age >= 30)
         {
            const decade = 3;
            var millenial = true;
         }


    function second()
     {
        const job = 'teacher';

         console.log(`${myName} is a ${age} old ${job}`)
    }

        second();
   }
                            
 first();



 
*/
